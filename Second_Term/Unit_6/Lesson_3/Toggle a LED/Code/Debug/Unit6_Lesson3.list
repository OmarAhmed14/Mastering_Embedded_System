
Unit6_Lesson3.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000130  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000001c8  08000130  08000130  00010130  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  080002f8  08000300  00010300  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  080002f8  080002f8  00010300  2**0
                  CONTENTS
  4 .ARM          00000000  080002f8  080002f8  00010300  2**0
                  CONTENTS
  5 .preinit_array 00000000  080002f8  08000300  00010300  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080002f8  080002f8  000102f8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080002fc  080002fc  000102fc  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  00010300  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  08000300  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  08000300  0002001c  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  00010300  2**0
                  CONTENTS, READONLY
 12 .debug_info   000000bf  00000000  00000000  00010329  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_abbrev 0000008b  00000000  00000000  000103e8  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_aranges 00000058  00000000  00000000  00010478  2**3
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_ranges 00000040  00000000  00000000  000104d0  2**3
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_macro  00000a9b  00000000  00000000  00010510  2**0
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_line   00000107  00000000  00000000  00010fab  2**0
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_str    00002e61  00000000  00000000  000110b2  2**0
                  CONTENTS, READONLY, DEBUGGING
 19 .comment      0000007b  00000000  00000000  00013f13  2**0
                  CONTENTS, READONLY
 20 .debug_frame  0000009c  00000000  00000000  00013f90  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

08000130 <__do_global_dtors_aux>:
 8000130:	b510      	push	{r4, lr}
 8000132:	4c05      	ldr	r4, [pc, #20]	; (8000148 <__do_global_dtors_aux+0x18>)
 8000134:	7823      	ldrb	r3, [r4, #0]
 8000136:	b933      	cbnz	r3, 8000146 <__do_global_dtors_aux+0x16>
 8000138:	4b04      	ldr	r3, [pc, #16]	; (800014c <__do_global_dtors_aux+0x1c>)
 800013a:	b113      	cbz	r3, 8000142 <__do_global_dtors_aux+0x12>
 800013c:	4804      	ldr	r0, [pc, #16]	; (8000150 <__do_global_dtors_aux+0x20>)
 800013e:	f3af 8000 	nop.w
 8000142:	2301      	movs	r3, #1
 8000144:	7023      	strb	r3, [r4, #0]
 8000146:	bd10      	pop	{r4, pc}
 8000148:	20000000 	.word	0x20000000
 800014c:	00000000 	.word	0x00000000
 8000150:	080002e0 	.word	0x080002e0

08000154 <frame_dummy>:
 8000154:	b508      	push	{r3, lr}
 8000156:	4b03      	ldr	r3, [pc, #12]	; (8000164 <frame_dummy+0x10>)
 8000158:	b11b      	cbz	r3, 8000162 <frame_dummy+0xe>
 800015a:	4903      	ldr	r1, [pc, #12]	; (8000168 <frame_dummy+0x14>)
 800015c:	4803      	ldr	r0, [pc, #12]	; (800016c <frame_dummy+0x18>)
 800015e:	f3af 8000 	nop.w
 8000162:	bd08      	pop	{r3, pc}
 8000164:	00000000 	.word	0x00000000
 8000168:	20000004 	.word	0x20000004
 800016c:	080002e0 	.word	0x080002e0

08000170 <Clock_Init_32MHz>:
#define GPIOA_BASE        			0x40010800
#define GPIOA_CRL         *((unsigned volatile int*)(GPIOA_BASE+0x0))
#define GPIOA_ODR         *((unsigned volatile int*)(GPIOA_BASE+0x0C))

void Clock_Init_32MHz(void)
{
 8000170:	b480      	push	{r7}
 8000172:	af00      	add	r7, sp, #0
	RCC_CFGR &=~(1<<16);
 8000174:	4b0d      	ldr	r3, [pc, #52]	; (80001ac <Clock_Init_32MHz+0x3c>)
 8000176:	681b      	ldr	r3, [r3, #0]
 8000178:	4a0c      	ldr	r2, [pc, #48]	; (80001ac <Clock_Init_32MHz+0x3c>)
 800017a:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 800017e:	6013      	str	r3, [r2, #0]
	RCC_CFGR|=((0b0110)<<18);
 8000180:	4b0a      	ldr	r3, [pc, #40]	; (80001ac <Clock_Init_32MHz+0x3c>)
 8000182:	681b      	ldr	r3, [r3, #0]
 8000184:	4a09      	ldr	r2, [pc, #36]	; (80001ac <Clock_Init_32MHz+0x3c>)
 8000186:	f443 13c0 	orr.w	r3, r3, #1572864	; 0x180000
 800018a:	6013      	str	r3, [r2, #0]
	RCC_CFGR|=2;
 800018c:	4b07      	ldr	r3, [pc, #28]	; (80001ac <Clock_Init_32MHz+0x3c>)
 800018e:	681b      	ldr	r3, [r3, #0]
 8000190:	4a06      	ldr	r2, [pc, #24]	; (80001ac <Clock_Init_32MHz+0x3c>)
 8000192:	f043 0302 	orr.w	r3, r3, #2
 8000196:	6013      	str	r3, [r2, #0]
	RCC_CR|=(1<<24);
 8000198:	4b05      	ldr	r3, [pc, #20]	; (80001b0 <Clock_Init_32MHz+0x40>)
 800019a:	681b      	ldr	r3, [r3, #0]
 800019c:	4a04      	ldr	r2, [pc, #16]	; (80001b0 <Clock_Init_32MHz+0x40>)
 800019e:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 80001a2:	6013      	str	r3, [r2, #0]
}
 80001a4:	bf00      	nop
 80001a6:	46bd      	mov	sp, r7
 80001a8:	bc80      	pop	{r7}
 80001aa:	4770      	bx	lr
 80001ac:	40021004 	.word	0x40021004
 80001b0:	40021000 	.word	0x40021000

080001b4 <GPIOA_INIT>:

void GPIOA_INIT(void)
{
 80001b4:	b480      	push	{r7}
 80001b6:	af00      	add	r7, sp, #0
	RCC_APB2ENR|=(1<<2);
 80001b8:	4b0a      	ldr	r3, [pc, #40]	; (80001e4 <GPIOA_INIT+0x30>)
 80001ba:	681b      	ldr	r3, [r3, #0]
 80001bc:	4a09      	ldr	r2, [pc, #36]	; (80001e4 <GPIOA_INIT+0x30>)
 80001be:	f043 0304 	orr.w	r3, r3, #4
 80001c2:	6013      	str	r3, [r2, #0]
	GPIOA_CRL|=(1<<1);
 80001c4:	4b08      	ldr	r3, [pc, #32]	; (80001e8 <GPIOA_INIT+0x34>)
 80001c6:	681b      	ldr	r3, [r3, #0]
 80001c8:	4a07      	ldr	r2, [pc, #28]	; (80001e8 <GPIOA_INIT+0x34>)
 80001ca:	f043 0302 	orr.w	r3, r3, #2
 80001ce:	6013      	str	r3, [r2, #0]
	GPIOA_CRL&=~ (1<<2);
 80001d0:	4b05      	ldr	r3, [pc, #20]	; (80001e8 <GPIOA_INIT+0x34>)
 80001d2:	681b      	ldr	r3, [r3, #0]
 80001d4:	4a04      	ldr	r2, [pc, #16]	; (80001e8 <GPIOA_INIT+0x34>)
 80001d6:	f023 0304 	bic.w	r3, r3, #4
 80001da:	6013      	str	r3, [r2, #0]
}
 80001dc:	bf00      	nop
 80001de:	46bd      	mov	sp, r7
 80001e0:	bc80      	pop	{r7}
 80001e2:	4770      	bx	lr
 80001e4:	40021018 	.word	0x40021018
 80001e8:	40010800 	.word	0x40010800

080001ec <main>:

int main(void)
{
 80001ec:	b580      	push	{r7, lr}
 80001ee:	b082      	sub	sp, #8
 80001f0:	af00      	add	r7, sp, #0
	Clock_Init_32MHz();
 80001f2:	f7ff ffbd 	bl	8000170 <Clock_Init_32MHz>
	GPIOA_INIT();
 80001f6:	f7ff ffdd 	bl	80001b4 <GPIOA_INIT>
    /* Loop forever */
	while (1)
	{
		GPIOA_ODR|=(1<<0);
 80001fa:	4b10      	ldr	r3, [pc, #64]	; (800023c <main+0x50>)
 80001fc:	681b      	ldr	r3, [r3, #0]
 80001fe:	4a0f      	ldr	r2, [pc, #60]	; (800023c <main+0x50>)
 8000200:	f043 0301 	orr.w	r3, r3, #1
 8000204:	6013      	str	r3, [r2, #0]
		for ( int i=0;i<1000000;i++);
 8000206:	2300      	movs	r3, #0
 8000208:	607b      	str	r3, [r7, #4]
 800020a:	e002      	b.n	8000212 <main+0x26>
 800020c:	687b      	ldr	r3, [r7, #4]
 800020e:	3301      	adds	r3, #1
 8000210:	607b      	str	r3, [r7, #4]
 8000212:	687b      	ldr	r3, [r7, #4]
 8000214:	4a0a      	ldr	r2, [pc, #40]	; (8000240 <main+0x54>)
 8000216:	4293      	cmp	r3, r2
 8000218:	ddf8      	ble.n	800020c <main+0x20>
		GPIOA_ODR&= ~(1<<0);
 800021a:	4b08      	ldr	r3, [pc, #32]	; (800023c <main+0x50>)
 800021c:	681b      	ldr	r3, [r3, #0]
 800021e:	4a07      	ldr	r2, [pc, #28]	; (800023c <main+0x50>)
 8000220:	f023 0301 	bic.w	r3, r3, #1
 8000224:	6013      	str	r3, [r2, #0]
		for ( int i=0;i<1000000;i++);
 8000226:	2300      	movs	r3, #0
 8000228:	603b      	str	r3, [r7, #0]
 800022a:	e002      	b.n	8000232 <main+0x46>
 800022c:	683b      	ldr	r3, [r7, #0]
 800022e:	3301      	adds	r3, #1
 8000230:	603b      	str	r3, [r7, #0]
 8000232:	683b      	ldr	r3, [r7, #0]
 8000234:	4a02      	ldr	r2, [pc, #8]	; (8000240 <main+0x54>)
 8000236:	4293      	cmp	r3, r2
 8000238:	ddf8      	ble.n	800022c <main+0x40>
		GPIOA_ODR|=(1<<0);
 800023a:	e7de      	b.n	80001fa <main+0xe>
 800023c:	4001080c 	.word	0x4001080c
 8000240:	000f423f 	.word	0x000f423f

08000244 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000244:	480d      	ldr	r0, [pc, #52]	; (800027c <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000246:	4685      	mov	sp, r0
/* Call the clock system intitialization function.*/
  bl  SystemInit
 8000248:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 800024c:	480c      	ldr	r0, [pc, #48]	; (8000280 <LoopForever+0x6>)
  ldr r1, =_edata
 800024e:	490d      	ldr	r1, [pc, #52]	; (8000284 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000250:	4a0d      	ldr	r2, [pc, #52]	; (8000288 <LoopForever+0xe>)
  movs r3, #0
 8000252:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000254:	e002      	b.n	800025c <LoopCopyDataInit>

08000256 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000256:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000258:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800025a:	3304      	adds	r3, #4

0800025c <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 800025c:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800025e:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000260:	d3f9      	bcc.n	8000256 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000262:	4a0a      	ldr	r2, [pc, #40]	; (800028c <LoopForever+0x12>)
  ldr r4, =_ebss
 8000264:	4c0a      	ldr	r4, [pc, #40]	; (8000290 <LoopForever+0x16>)
  movs r3, #0
 8000266:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000268:	e001      	b.n	800026e <LoopFillZerobss>

0800026a <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800026a:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 800026c:	3204      	adds	r2, #4

0800026e <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800026e:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000270:	d3fb      	bcc.n	800026a <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000272:	f000 f811 	bl	8000298 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000276:	f7ff ffb9 	bl	80001ec <main>

0800027a <LoopForever>:

LoopForever:
    b LoopForever
 800027a:	e7fe      	b.n	800027a <LoopForever>
  ldr   r0, =_estack
 800027c:	20002800 	.word	0x20002800
  ldr r0, =_sdata
 8000280:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000284:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 8000288:	08000300 	.word	0x08000300
  ldr r2, =_sbss
 800028c:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 8000290:	2000001c 	.word	0x2000001c

08000294 <ADC1_2_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000294:	e7fe      	b.n	8000294 <ADC1_2_IRQHandler>
	...

08000298 <__libc_init_array>:
 8000298:	b570      	push	{r4, r5, r6, lr}
 800029a:	2500      	movs	r5, #0
 800029c:	4e0c      	ldr	r6, [pc, #48]	; (80002d0 <__libc_init_array+0x38>)
 800029e:	4c0d      	ldr	r4, [pc, #52]	; (80002d4 <__libc_init_array+0x3c>)
 80002a0:	1ba4      	subs	r4, r4, r6
 80002a2:	10a4      	asrs	r4, r4, #2
 80002a4:	42a5      	cmp	r5, r4
 80002a6:	d109      	bne.n	80002bc <__libc_init_array+0x24>
 80002a8:	f000 f81a 	bl	80002e0 <_init>
 80002ac:	2500      	movs	r5, #0
 80002ae:	4e0a      	ldr	r6, [pc, #40]	; (80002d8 <__libc_init_array+0x40>)
 80002b0:	4c0a      	ldr	r4, [pc, #40]	; (80002dc <__libc_init_array+0x44>)
 80002b2:	1ba4      	subs	r4, r4, r6
 80002b4:	10a4      	asrs	r4, r4, #2
 80002b6:	42a5      	cmp	r5, r4
 80002b8:	d105      	bne.n	80002c6 <__libc_init_array+0x2e>
 80002ba:	bd70      	pop	{r4, r5, r6, pc}
 80002bc:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 80002c0:	4798      	blx	r3
 80002c2:	3501      	adds	r5, #1
 80002c4:	e7ee      	b.n	80002a4 <__libc_init_array+0xc>
 80002c6:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 80002ca:	4798      	blx	r3
 80002cc:	3501      	adds	r5, #1
 80002ce:	e7f2      	b.n	80002b6 <__libc_init_array+0x1e>
 80002d0:	080002f8 	.word	0x080002f8
 80002d4:	080002f8 	.word	0x080002f8
 80002d8:	080002f8 	.word	0x080002f8
 80002dc:	080002fc 	.word	0x080002fc

080002e0 <_init>:
 80002e0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80002e2:	bf00      	nop
 80002e4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80002e6:	bc08      	pop	{r3}
 80002e8:	469e      	mov	lr, r3
 80002ea:	4770      	bx	lr

080002ec <_fini>:
 80002ec:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80002ee:	bf00      	nop
 80002f0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80002f2:	bc08      	pop	{r3}
 80002f4:	469e      	mov	lr, r3
 80002f6:	4770      	bx	lr
